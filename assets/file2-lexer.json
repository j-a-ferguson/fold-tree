[
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 0,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 1,
            "len": 1
        }
    },
    {
        "type": "OpenBracket",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 2,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 3,
            "len": 1
        }
    },
    {
        "type": "CloseBracket",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 4,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 5,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 6,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 7,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 8,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 9,
            "len": 1
        }
    },
    {
        "type": "OpenBracket",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 10,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 11,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 12,
            "len": 1
        }
    },
    {
        "type": "OpenBracket",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 13,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 14,
            "len": 1
        }
    },
    {
        "type": "CloseBracket",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 15,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 16,
            "len": 1
        }
    },
    {
        "type": "OpenBracket",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 17,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 18,
            "len": 1
        }
    },
    {
        "type": "OpenBracket",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 19,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 20,
            "len": 1
        }
    },
    {
        "type": "CloseBracket",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 21,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 22,
            "len": 1
        }
    },
    {
        "type": "CloseBracket",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 23,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 24,
            "len": 1
        }
    },
    {
        "type": "CloseBracket",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 25,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 26,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 27,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 28,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 29,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 30,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 31,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 32,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 33,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 34,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 35,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 36,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 37,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 38,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 39,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 40,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 41,
            "len": 1
        }
    },
    {
        "type": "Textline",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 42,
            "len": 1
        }
    },
    {
        "type": "EOI",
        "src_pos": {
            "buffer": [
                "\n",
                "// single fold\n",
                "//{{{ fold with comment\n",
                "Hello this is some text\n",
                "//}}}\n",
                "\n",
                "// This is a \n",
                "// text node\n",
                "// here\n",
                "// nested folds\n",
                "//{{{ col: collection 1 \n",
                "\n",
                "\n",
                "    //{{{ col: collection 2\n",
                "        \n",
                "    //}}}\n",
                "\n",
                "    //{{{ col: collection 3\n",
                "\n",
                "        //{{{ col: collection 4\n",
                "\n",
                "        //}}}\n",
                "\n",
                "    //}}}\n",
                "\n",
                "//}}}\n",
                "\n",
                "int fcn(double val)\n",
                "{\n",
                "    int a = 1;\n",
                "    int b = 2;\n",
                "    {\n",
                "        double d = 1.0;\n",
                "    }\n",
                "\n",
                "\n",
                "    if(a == 1)\n",
                "    {\n",
                "        int c = 4;\n",
                "    }\n",
                "    \n",
                "    return a;\n",
                "}"
            ],
            "line": 43,
            "len": 0
        }
    }
]